------------------------
------------------------
DataONE Service API Java
------------------------
------------------------

Generated Domain Objects
------------------------

Domain objects for the dataone project should be, as much as is reasonable, maintained via xml schema.  The objects themselves will be generated from the schema definitions in order to render any serialized output via an open source marshallalling technology.  The current implementation only supports JibX, however, further abstraction should allow development of a domain interface architecture such that any marshaller could be supported, assuming the generated classes could commit to and apply interface specifications.

The domain objects are contained in the org.dataone.service.types package. The Jibx generation is controlled by a mixture of JibX and Ant tasks. The first task will download the schema files from the svn repository and then change the import definitions to point to the directories in which they are housed on the local system instead of the https location.  The change is necessary because JibX appears to assume that classes generated from the local system's common.xsd are different versions from the common.xsd found via svn https location.

Through an ant task, JibX codegen is called on the downloaded files to produce class files and binding definitions.  The binding definitions are stored in the top level directory while the classes are saved to org.dataone.service.types. Next, the class files are modified to use different getter/setter and list methods than the default generated by JibX.  The default namespace prefixes are altered to be 'd1' while the ObjectFormat types are translated to something more readable by a developer. 

Only after all the alterations are complete will the bindings compile successfully by the bind-jibx process. 
