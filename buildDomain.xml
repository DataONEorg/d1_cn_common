<?xml version="1.0" encoding="UTF-8"?>
<!--

    This work was created by participants in the DataONE project, and is
    jointly copyrighted by participating institutions in DataONE. For
    more information on DataONE, see our web site at http://dataone.org.

      Copyright ${year}

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<!--
    Document   : build.xml
    Created on : April 1, 2010, 10:48 AM
    Author     : rwaltz
    Description:
        Purpose of the document follows.
-->

<project name="DataONE-ServiceAPI-Java" default="hello" basedir=".">
    <description>
        tasks needed but not supported by Maven build file
    </description>
    <!-- set global properties for this build -->

    <target name="hello"
            description="say hello" >
        <echo message="Hello World"/>
        <echo message="compile classpath: ${compile_classpath}"/>
        <echo message="runtime classpath: ${runtime_classpath}"/>

    </target>


    <!-- generate using default settings -->
    <target name="codegen">

        <echo message="Running code generation from schema"/>
<!-- leaving this here as an example of how to generate from multiple schema
     the binding.xml file will need to be edited to include the new binding file (such as binding_v0.xml)
        <java classname="org.jibx.schema.codegen.CodeGen" fork="yes"
               failonerror="true">
            <classpath>
                <pathelement path="${compile_classpath}"/>
                <pathelement path="{java.class.path}" />
            </classpath>
            <arg value="-b" />
            <arg value="binding_v0.xml" />
            <arg value="-c" />
            <arg value="${basedir}/src/main/resources/org/dataone/service/resources/config/jibxConfig.xml" />
            <arg value="-s" />
            <arg value="https://repository.dataone.org/software/cicore/tags/D1_SCHEMA_1_0_2/" />
            <arg value="-t"/>
            <arg value="${basedir}/src/main/java"/>
            <arg value="dataoneTypes.xsd" />
        </java>
-->
        <java classname="org.jibx.schema.codegen.CodeGen" fork="yes"
               failonerror="true">
            <classpath>
                <pathelement path="${compile_classpath}"/>
                <pathelement path="${java.class.path}" />
            </classpath>

            <arg value="-b" />
            <arg value="binding_v1.xml" />
            <arg value="-c" />
            <arg value="${basedir}/src/main/resources/org/dataone/service/resources/config/v1/jibxConfig.xml" />
            <arg value="-s" />
            <!-- the repository url should be used for development cycles -->
            <arg value="https://repository.dataone.org/software/cicore/trunk/d1_schemas/" />
            <!-- the ns url should be used for production releases -->
<!--            <arg value="http://ns.dataone.org/service/types" />  -->
            <arg value="-t"/>
            <arg value="${basedir}/src/main/java"/>

        	<!-- the last argument should be dataoneTypes.xsd for development cycles -->
            <arg value="dataoneTypes.xsd" />
            <arg value="dataoneTypes_v1.1.xsd" />
            <!-- the last arguments should be v1 and v1.1 for production releases -->
            <!-- <arg value="v1" /> -->
            <!-- <arg value="v1.1" /> -->
        </java>

    </target>
</project>
